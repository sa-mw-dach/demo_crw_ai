apiVersion: 1.0.0
metadata:
  generateName: crw_ai_
projects:
  - name: demo_crw_ai_repo
    source:
      type: git
      location: 'https://github.com/sa-mw-dach/demo_crw_ai.git'
      branch: feature/first_running_version
components:
  - type: cheEditor
    alias: theia-editor
    id: eclipse/che-theia/latest
    memoryLimit: 1Gi
  # - type: chePlugin
  #   alias: exec-plugin
  #   id: eclipse/che-machine-exec-plugin/latest
  #   memoryLimit: 512M
  - type: chePlugin
    id: ms-python/python/latest
    preferences:
      python.globalModuleInstallation: true
  - type: dockerimage
    alias: python
    image: quay.io/eclipse/che-python-3.8:ce0526f
    memoryLimit: 4Gi
    # endpoints:
    #   - name: 'ai-test-endpoint-new'
    #     port: 5000
    #     attributes:
    #        public: 'true'
    #        discoverable: 'true'
    mountSources: true
  - id: redhat/vscode-yaml/latest
    type: chePlugin
  - id: redhat/vscode-xml/latest
    type: chePlugin
commands:
  - name: 01_license_plate_server Start server
    actions:
      - type: exec
        component: python
        command: 'python -m venv ${HOME}/.venv && . ${HOME}/.venv/bin/activate && python -m pip install --upgrade pip && pip install -r external/licence-plate-workshop/requirements.txt && cd external/licence-plate-workshop/ && FLASK_ENV=development FLASK_APP=wsgi.py flask run'
        workdir: '${CHE_PROJECTS_ROOT}/demo_crw_ai_repo'
