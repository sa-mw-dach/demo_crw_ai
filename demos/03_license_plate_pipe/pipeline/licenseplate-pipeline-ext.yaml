apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: licenseplate-pipeline-ext
spec:
  tasks:
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/sa-mw-dach/dev_demos.git'
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:da1aedf0b17f2b9dd2a46edc93ff1c0582989414b902a28cd79bad8a035c9ea4
        - name: userHome
          value: /tekton/home
        - name: revision
          value: main
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: buildah
      params:
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/pipelines-demo/licenseplate
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:99cae35f40c7ec050fed3765b2b27e0b8bbea2aa2da7c16408e2ca13c60ff8ee
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: ./demos/03_license_plate_pipe/Dockerfile
        - name: CONTEXT
          value: ./
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: openshift-client
      params:
        - name: SCRIPT
          value: oc apply -f demos/03_license_plate_pipe/manifests
        - name: VERSION
          value: latest
      runAfter:
        - buildah
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: shared-workspace
    - name: openshift-client-mtq
      params:
        - name: SCRIPT
          value: >-
            oc patch deployment licenseplate
            --patch='{"spec":{"template":{"spec":{
                        "containers":[{
                          "name": "licenseplate",
                          "image":"image-registry.openshift-image-registry.svc:5000/bschmeli-tmp/licenseplate@$(tasks.buildah.results.IMAGE_DIGEST)"
                        }]
                      }}}}'
        - name: VERSION
          value: latest
      runAfter:
        - openshift-client
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: shared-workspace

