apiVersion: 1.0.0
metadata:
  generateName: crw_ai_gpu_
projects:
  - name: demo_crw_ai_repo
    source:
      type: git
      location: 'https://github.com/sa-mw-dach/demo_crw_ai.git'
      branch: feature/first_running_version
components:
  - type: cheEditor
    alias: theia-editor
    id: eclipse/che-theia/latest
    memoryLimit: 1Gi
  # - type: chePlugin
  #   alias: exec-plugin
  #   id: eclipse/che-machine-exec-plugin/latest
  #   memoryLimit: 512M
  - type: chePlugin
    id: ms-python/python/latest
    preferences:
      python.globalModuleInstallation: true
  # - type: dockerimage
  #   alias: python
  #   image: quay.io/eclipse/che-python-3.8:ce0526f
  #   memoryLimit: 4Gi
  #   # endpoints:
  #   #   - name: 'ai-test-endpoint-new'
  #   #     port: 5000
  #   #     attributes:
  #   #        public: 'true'
  #   #        discoverable: 'true'
  #   mountSources: true
  # - mountSources: true
  #   referenceContent: |
  #     apiVersion: v1
  #     kind: Pod
  #     metadata:
  #       name: python
  #     spec:
  #       containers:
  #         - name: python
  #           image: 'registry.redhat.io/codeready-workspaces/plugin-java8-rhel8@sha256:1c4faa2dae80c373f606f542ca841f991d1dfa27979006500aca85e3c2999d2d'
  #           resources:
  #             limits:
  #               memory: 512Mi
  #             requests:
  #               nvidia.com/gpu: 1 # requesting 1 GPU
  #           volumeMounts:
  #             - name: venv
  #               mountPath: /home/jboss/.venv
  #       volumes:
  #         - name: venv
  #           emptyDir: {}
  #   type: kubernetes
  #   alias: python
  - mountSources: true
    referenceContent: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: python
      spec:
        containers:
          - name: python
            image: mhahn-gpu-test
            resources:
              limits:
                memory: 4Gi
                nvidia.com/gpu: 1 # limiting to 1 GPU
              requests:
                nvidia.com/gpu: 1 # requesting 1 GPU
        nodeSelector:
          nvidia.com/gpu.present: true
    type: kubernetes
    alias: python
  - id: redhat/vscode-yaml/latest
    type: chePlugin
  - id: redhat/vscode-xml/latest
    type: chePlugin
commands:
  - name: 01_license_plate_server Start server
    actions:
      - type: exec
        component: python
        command: 'python -m venv ${HOME}/.venv && . ${HOME}/.venv/bin/activate && python -m pip install --upgrade pip && pip install -r external/licence-plate-workshop/requirements.txt && cd external/licence-plate-workshop/ && FLASK_ENV=development FLASK_APP=wsgi.py flask run'
        workdir: '${CHE_PROJECTS_ROOT}/demo_crw_ai_repo'
